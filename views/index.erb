<!DOCTYPE HTML>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Dribble</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/normalize.css">
    <link rel="stylesheet" href="/css/style.css?<%= style_mtime %>">
    <link rel="stylesheet" href="/fontawesome-free-5.14.0-web/css/all.css">
    <script type="text/javascript" src="/dribble.js?<%= dribble_mtime %>"></script>
    <script type="text/javascript" src="/js/app.js"></script>
  </head>

  <body>
    <div id="app"></div>
  </body>

  <script type="text/javascript">
    var storedConfig = localStorage.getItem('app-config');
    console.log("Retrieved config: ", storedConfig);
    var startingConfig = storedConfig ? JSON.parse(storedConfig) : null;
    console.log("Parsed config: ", startingConfig);

    app = Elm.Main.init({
      node: document.getElementById('app'),
      flags: { config: startingConfig, time: Date.now() }
    });

    app.ports.sendMessage.subscribe(function(message) {
      ws.send(message);
    });

    app.ports.storeConfig.subscribe(function(config) {
      console.log("Saved config: ", config);
      localStorage.setItem('app-config', JSON.stringify(config));
    });

    // add preferences and logs to windowResizeObserver once they're
    // in the DOM, rendered by Elm. This is called in Init.elm then
    // never again as the windows are only hidden, not removed from DOM.
    app.ports.observeWindowResize.subscribe(function(id) {
      windowResizeObserver.observe(document.getElementById(id));
    });

    connect();
  </script>
</html>
